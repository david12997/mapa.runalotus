// Generated by https://quicktype.io

export interface PointTourism {
    data: PointTourismDatum[];
    meta: Meta;
}

export interface PointTourismDatum {
    id:         number;
    attributes: PurpleAttributes;
}

export interface PurpleAttributes {
    id_point:      string;
    uuid:          string;
    name:          string;
    description:   null;
    location:      FluffyLocation;
    state:         null | string;
    data:          null;
    deleted:       boolean;
    created:       null | string;
    updated:       null | string;
    tags:          null | string;
    createdAt:     string;
    updatedAt:     string;
    publishedAt:   string;
    locale:        Locale;
    gMapsPoint:    null;
    places:        Localizations;
    media:         Localizations;
    routes:        Localizations;
    subcategories: Localizations;
    seo:           any[];
    metasocial:    any[];
    localizations: Localizations;
}

export enum Locale {
    EsCO = "es-CO",
}

export interface Localizations {
    data: LocalizationsDatum[];
}

export interface LocalizationsDatum {
    id:         number;
    attributes: FluffyAttributes;
}

export interface FluffyAttributes {
    name:               string;
    alternativeText?:   null;
    caption?:           null;
    width?:             number;
    height?:            number;
    formats?:           Formats;
    hash?:              string;
    ext?:               EXT;
    mime?:              MIME;
    size?:              number;
    url?:               string;
    previewUrl?:        null;
    provider?:          Provider;
    provider_metadata?: null;
    createdAt:          string;
    updatedAt:          string;
    id_place?:          string;
    uuid?:              string;
    type?:              Type;
    description?:       null | string;
    location?:          PurpleLocation;
    data?:              Data | null;
    deleted?:           boolean | null;
    created?:           null | string;
    updated?:           null | string;
    tags?:              null;
    publishedAt?:       string;
    locale?:            Locale;
    id_route?:          string;
    duration?:          null;
    distance?:          null;
    state?:             null;
    id_subcategory?:    string;
}

export interface Data {
    geoJSON?: GeoJSON;
}

export enum GeoJSON {
    UploadsColombiaAntioquia08Bdb682D6Geojson = "/uploads/colombia_antioquia_08bdb682d6.geojson",
    UploadsColombiaCundinamarca24895E5B21Geojson = "/uploads/colombia_cundinamarca_24895e5b21.geojson",
    UploadsColombiaGuajiraB6616937FcGeojson = "/uploads/colombia_guajira_b6616937fc.geojson",
    UploadsColombiaHuila36301A7Af3Geojson = "/uploads/colombia_huila_36301a7af3.geojson",
    UploadsMedellin4Ba77F2941Geojson = "/uploads/medellin_4ba77f2941.geojson",
}

export enum EXT {
    JPEG = ".jpeg",
    Jpg = ".jpg",
}

export interface Formats {
    thumbnail: Large;
    small?:    Large;
    medium?:   Large;
    large?:    Large;
}

export interface Large {
    name:   string;
    hash:   string;
    ext:    EXT;
    mime:   MIME;
    path:   null;
    width:  number;
    height: number;
    size:   number;
    url:    string;
}

export enum MIME {
    ImageJPEG = "image/jpeg",
}

export interface PurpleLocation {
    departamento?: Departamento;
    latitud:       string;
    longitud:      string;
    ciudad?:       string;
}

export enum Departamento {
    Antioquia = "Antioquia",
    Cundinamarca = "Cundinamarca",
    Huila = "Huila",
    LaGuajira = "La Guajira",
}

export enum Provider {
    Local = "local",
}

export enum Type {
    CiudadMedellin = "ciudad medellin ",
    DepartamentoAntioquia = "departamento antioquia",
    DepartamentoCundinamarca = "departamento cundinamarca",
    DepartamentoGuajira = "departamento guajira",
    DepartamentoHuila = "departamento huila",
}

export interface FluffyLocation {
    nombre:       string;
    ubicacion:    string;
    descripcion:  string;
    departamento: Departamento;
    clima:        string;
    latitud:      number;
    longitud:     number;
    icon:         string;
    type:         string;
}

export interface Meta {
    pagination: Pagination;
}

export interface Pagination {
    page:      number;
    pageSize:  number;
    pageCount: number;
    total:     number;
}
